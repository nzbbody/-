/**
 * Copyright (c) 2015~2016, Andy Niu All rights reserved.
 * \file		CPP.txt
 * \brief		CPP
 * \author		牛自宾
 * \date		2015年7月5日
 * \note		C++帮助文档
 */

/**
* @defgroup CPP
* @{
*/

/**
* @defgroup ModernCPP
* @{
*/

/**
@verbatim
1、解决什么问题？
	考虑下面的场景，甲乙住宾馆，甲对房间里面的家具不满意，对乙房间的家具满意，而乙因为其他原因退房。
2、怎么解决这个问题？
	笨的办法是，先清空甲房间的家具，对乙房间的每个家具复制一个，搬过来。
	这就是copy赋值的做法。
3、上面的办法，显然成本比较大。更好的办法是：
	把乙房间的钥匙给甲，不就OK了嘛，反正乙不再使用房间。
4、怎么实现？
	相对于上面的copy赋值，需要增加一种copy赋值，暂且叫做move转移赋值。
	为了区分正常的copy赋值，需要区分构造参数，也就是乙不再使用房间，也就是右值，期望接收右值参数。
	而move方法就是把左值参数，转化为右值参数。
5、注意：
	move只是把参数的属性修改一下，使它成为右值，触发调用接收右值参数的copy赋值，在copy赋值中，实现对钥匙的转移。
	copy构造也是相同的道理。
6、也就是说，增加了移动构造和移动赋值。
@endverbatim
*/
move操作;



/** @} */

/** @} */