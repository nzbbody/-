/**
* @defgroup 计算机原理
* @{
*/


/**
@verbatim
1、首先应弄清PV操作的含义：PV操作由P操作原语和V操作原语组成（原语是不可中断的过程），
	对信号量进行操作，具体定义如下：
	P（S）：
		①将信号量S的值减1，即S=S-1；
		②如果S>=0，则该进程继续执行；否则该进程置为等待状态，排入等待队列。
	V（S）：
		①将信号量S的值加1，即S=S+1；
		②该进程继续执行（不阻塞），并且，如果该信号的等待队列中有等待线程，唤醒一等待线程。
2、PV操作的意义：我们用信号量及PV操作来实现进程的同步和互斥。PV操作属于进程的低级通信。
3、什么是信号量？
	信号量（semaphore）的数据结构为一个值和一个指针，指针指向等待该信号量的下一个进程。
	信号量的值与相应资源的使用情况有关。
	当它的值大于0时，表示当前可用资源的数量。
	当它的值小于0时，其绝对值表示等待使用该资源的进程个数。
	注意，信号量的值仅能由PV操作来改变。
4、P操作，S的值减1。
	如果S>0，说明还有资源，线程不阻塞，继续运行下去。
	如果S=0，说明刚好用完资源，当前线程也获取到了资源，线程不阻塞，继续运行下去。
	如果S<0，说明没有可用资源，当前线程移到等待队列中，等待被唤醒。S的绝对值就是等待线程的个数。
5、V操作，S的值加1。
	如果S>0，说明还有资源，没有线程在等待，不需要做什么。
	如果S=0，说明S加1之前取值是-1，有一个线程在等待，需要做的事情是：唤醒队列中的这个线程。
	如果S<0，说明之前有多个线程在等待，假如当前S取值为-4，说明S加1之前是-5，队列中有5个线程在阻塞。
			 这时候需要做的事情是：唤醒队列中第一个线程，还有4个线程等待。
	注意：V操作本身不会被阻塞，只是判断是否需要唤醒阻塞的线程。
6、特别注意：PV操作的P操作会导致线程阻塞，而V操作不会导致线程阻塞，只是判断是否需要唤醒阻塞的线程。
	对于生产者/消费者模式，要表达生产者线程阻塞（不能继续生产），需要使用一个反向的信号量。
@endverbatim
@see
*/
PV操作;


/** @} */