/**
* @defgroup 工作有关
* @{
*/

/**
* @defgroup 工作常见问题
* @{
*/

/**
@verbatim
-- 创建表，添加记录
create table staff(id int, name enc varchar(64), height enc float, weight enc float, basepay enc float, meritpay enc float, des enc varchar(128));
insert into staff value(1,"滕海明",178.5,176.25,1000.50,200.35,"I am Frank, hello");
insert into staff value(2,"陈明",170.5,150.25,900.15,310.45,"我叫陈明, 我来自上海");
insert into staff value(3,"杨万年",171.5,155.25,984.15,264.45,"我是杨万年，我是安徽人，hello");
insert into staff value(4,"刘新超",172.25,165.25,635.15,561.45,"大家好，我是刘新超");
insert into staff value(5,"钟倩",162.5,100.25,844.15,190.45,"我是钟倩，九零后");
insert into staff value(6,"倪飞",173.25,163.25,987.15,256.45,"我叫倪飞，我是安徽人");
insert into staff value(7,"牛自宾",175.5,170.25,810.15,315.45,"我是牛自宾，我来自安徽");

-- 查询所有的记录
select * from staff;

-- 最大值最小值【基本工资】
select max(basepay),min(basepay) from staff;

-- 密文的加减运算【基本工资+绩效工资】
select basepay, meritpay, basepay+meritpay from staff;

-- 密文的乘除【基本工资】
select basepay, basepay*1.1, basepay/2.5 from staff;

-- 密文的关键词模糊搜索

select * from staff where name="杨万年";

select * from staff where des like "%Frank%";
select * from staff where des like "%hello";

select * from staff where des like "%安徽";
select * from staff where des like "%安徽%";
@endverbatim
*/
GUI演示数据;

/**
@verbatim

在mysql添加 mysqld

init-connect='SET NAMES UTF8'
skip-character-set-client-handshake
character-set-server=utf8
collation-server=utf8_general_ci
重启mysql，重新创建数据库

@endverbatim
*/
FLKJDBC中文插入失败;


/**
@verbatim	
1、链接mysqld报错，需要修改 ./tools/lib_update_posix.sh，增加如下：
	# flkcdputil_1.0.0_amd64.deb
	# myparse_2.0.8_amd64.deb
	从ftp下载安装
2、运行flkcdp报错，
   init_mysql断言失败，
   需要执行一把 parser_base/tools/lib_update_posix.sh
@endverbatim
*/
最新代码执行的问题;

/**
@verbatim	
1、使用java 1.8
2、添加MySQL Driver Extra Class Path
3、添加 Example Url
	jdbc:mysql://127.0.0.1:3306/test1?characterEncoding=utf-8&user=root&password=letmein
	test1是已存在的数据库
	如果开始没有数据库，使用 jdbc:mysql://127.0.0.1:3306?characterEncoding=utf-8&user=root&password=letmein
4、添加别名
	找到MySQL Driver
	点击 login 测试
5、点击login测试，会出现一些问题，解决办法如下
	a、在文件 /etc/environment添加如下
		export EDBDIR=/home/niuzibin/work/FLKDBEnc/FLKCDP
		export CRYPTDB_SHADOW=${EDBDIR}/shadow	
		为了让修改起效，需要执行source /etc/environment
	b、在终端执行 source /etc/environment之后，然后启动 squirrel-sql.sh，如何找到 squirrel-sql.sh
		sudo find / -iname "*squirrel*"
		另外，通过桌面也能找到，如下：
		niuzibin@ubuntu:~/work/FLKDBEnc/FLKCDP/tests$ sudo find / -iname "*squirrel*"
		/home/niuzibin/.local/share/applications/SQuirreL SQL Client-1531207135031.desktop
		/home/niuzibin/squirrel-sql-3.8.1/doc/licences/squirrel_licence.txt
		/home/niuzibin/squirrel-sql-3.8.1/squirrel-sql.sh
		niuzibin@ubuntu:~/work/FLKDBEnc/FLKCDP/tests$ cd /home/niuzibin/.local/share/applications/
		niuzibin@ubuntu:~/.local/share/applications$ more SQuirreL\ SQL\ Client-1531207135031.desktop 
		[Desktop Entry]
		Categories=
		Comment=An ISQL tool
		Comment[en]=An ISQL tool
		Encoding=UTF-8
		Exec=/home/niuzibin/squirrel-sql-3.8.1/squirrel-sql.sh
6、特别注意：如果执行直接发给mysql，没有改写的sql语句，需要做的事情，如下：
	拷贝文件 ipConfig.json 到 /etc/hzflk_db_encrypt/	
@endverbatim
*/
client_gui的使用;

/**
@verbatim	
1、找出java的路径
	niuzibin@ubuntu:/home/disk1/jdbc-client-test$ java -version
	java version "1.7.0_181"
	OpenJDK Runtime Environment (IcedTea 2.6.14) (7u181-2.6.14-0ubuntu0.1)
	OpenJDK 64-Bit Server VM (build 24.181-b01, mixed mode)
	
	niuzibin@ubuntu:/home/disk1/jdbc-client-test$ whereis java
	java: /usr/bin/java /usr/bin/X11/java /usr/share/java /usr/share/man/man1/java.1.gz
	
	niuzibin@ubuntu:/home/disk1/jdbc-client-test$ ll /usr/bin/java
	lrwxrwxrwx 1 root root 22 Jul  7 23:06 /usr/bin/java -> /etc/alternatives/java*
	
	niuzibin@ubuntu:/home/disk1/jdbc-client-test$ ll /etc/alternatives/java
	lrwxrwxrwx 1 root root 46 Jul  7 23:06 /etc/alternatives/java -> /usr/lib/jvm/java-7-openjdk-amd64/jre/bin/java*
	
	niuzibin@ubuntu:/home/disk1/jdbc-client-test$ ll /usr/lib/jvm/java-7-openjdk-amd64/jre/bin/java
	-rwxr-xr-x 1 root root 6408 Jun  9 02:10 /usr/lib/jvm/java-7-openjdk-amd64/jre/bin/java*
2、找到1.8版本的java，然后设置软连接
	sudo ln -s /home/niuzibin/work/FLKDBEnc/FLKWebCrypt/third_parties/jdk1.8.0_162/bin/java /etc/alternatives/java -f
@endverbatim
*/
java版本的切换;


/**
@verbatim	
error: too few arguments to function ‘int MYSQLlex(void*, void*)’
       yychar = yylex (&yylval);
错误原因是：
bision3.0不兼容
sql_yacc.yy is incompatible with Bison 3.0
解决办法：
卸载老的bison，安装如下版本

wget http://launchpadlibrarian.net/140087283/libbison-dev_2.7.1.dfsg-1_amd64.deb
wget http://launchpadlibrarian.net/140087282/bison_2.7.1.dfsg-1_amd64.deb
sudo dpkg -i libbison-dev_2.7.1.dfsg-1_amd64.deb
sudo dpkg -i bison_2.7.1.dfsg-1_amd64.deb

然后删除 mysql-src目录，重新构建
@endverbatim
*/
MYSQLlex报错;


/**
@verbatim	
1、cmake 静态库的代码修改，动态库 make 没有重新链接，必须先要make clean一下
2、动态库edb.so修改了，安装到mysql服务，必须重启一下mysql服务
3、也就是会出现：
	没有clean，没有重启mysql，测试OK
	clean，并且重启mysql，测试OK
4、ope_join测试用例失败的原因找到了，：杨万年修改了ope的算法，静态库libedbcrypto_static.a发生变化，生成的edb.so的时候，先clean，再make
	edb.so变化，并且注册到mysql服务，但是没有重启mysql服务，导致剥洋葱的update操作失败。	
	另外还存在一个camek的问题，大家注意一下，动态库 a.so 链接静态库 b.a， 静态库b.a代码修改，重新编译， 生成动态库a.so时候，必须clean一下，否则a.so不会更新。	
	有些人的本地，没有重启mysql服务，ope_join测试也是成功的，原因是 生成edb.so的时候，没有clean，实际上一直没有更新edb.so
@endverbatim
*/
ope_join测试用例失败的原因分析;




/** @} */

/** @} */