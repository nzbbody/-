/**
* @defgroup Mysql事务
* @{
*/

/**
@verbatim
//test为分布式事务的标识，'add student'和'add teacher'为分支标识
//创建一个分布式事务的一个分支										//创建一个分布式事务的另一个分支
mysql> xa start 'test','add student';								mysql> xa start 'test','add teacher';
Query OK, 0 rows affected (0.00 sec)								Query OK, 0 rows affected (0.00 sec)
//student表插入一条记录												//teacher表插入一条记录
mysql> insert student(school,name,age) value('Num_1','Andy',24);	mysql> insert teacher(name) value('Mr Wang');
Query OK, 1 row affected (0.00 sec)									Query OK, 1 row affected (0.00 sec)
//第一阶段提交，进入prepeare状态									
mysql> xa end 'test','add student';									mysql> xa end 'test','add teacher';
Query OK, 0 rows affected (0.00 sec)								Query OK, 0 rows affected (0.00 sec)
mysql> xa prepare 'test','add student';								mysql> xa prepare 'test','add teacher';
Query OK, 0 rows affected (0.07 sec)								Query OK, 0 rows affected (0.07 sec)

//查看分支状态														
mysql> xa recover\G													mysql> xa recover\G
*************************** 1. row ***************************		*************************** 1. row ***************************
    formatID: 1														     formatID: 1
gtrid_length: 4														 gtrid_length: 4
bqual_length: 11													 bqual_length: 11
        data: testadd student										         data: testadd student
*************************** 2. row ***************************		*************************** 2. row ***************************
    formatID: 1 													     formatID: 1
gtrid_length: 4 													 gtrid_length: 4
bqual_length: 11													 bqual_length: 11
        data: testadd teacher 										         data: testadd teacher
2 rows in set (0.00 sec)											 2 rows in set (0.00 sec)

//第二阶段，两个分支都正常，两边都提交。如果任何一个分支出现错误，两边都进行回滚。这样就保证了分布式事务的正确。
mysql> xa commit 'test','add student'; 									  mysql> xa commit 'test','add teacher';
Query OK, 0 rows affected (0.08 sec)   									  Query OK, 0 rows affected (0.08 sec)
@endverbatim

@verbatim
mysql的分布式事务还存在缺陷，比如：
1、分支进入prepare状态，这个时候数据库异常，重新启动mysql，重新启动之后，可以进行提交或者回滚。
	但是提交的事务没有写入binlog（二进制日志），如果存在数据库复制，会导致主从数据库的数据不一致。
2、多个分支进入prepare状态，其中一个分支连接异常，其他的分支成功提交。
	而对于连接异常的分支，mysql的处理方式是回滚，这就导致了其他分支提交，一个分支回滚，也就是
	导致分布式事务的不完整。
@endverbatim
*/
分布式事务;


/** @} */

