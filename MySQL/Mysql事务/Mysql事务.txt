/**
* @defgroup MySQL
* @{
*/

/**
* @defgroup Mysql事务
* @{
*/

/**
@verbatim
1、事务隔离级别有：未提交读、已提交读、可重复读、串行化。
2、未提交读：读取到其它事务没有提交的信息。
3、已提交读和可重复读，都使用一致性非锁定读，也就是读取的时候不加锁，使用多版本并发控制。
	多版本也就是历史版本，通过undo段可以生成历史版本的一个快照。
	已提交读和可重复读的区别是读取的快照，已提交读是最近的一次快照（其它事务提交后），
	可重复读是当前事务开始前的快照。
4、串行化，串行处理性能比较差。
5、MySQL默认使用的是一致性非锁定读，如果使用一致性锁定读，怎么办？
	select ... for update;			// 添加排它锁
	select ... lock in share mode;  // 添加共享锁
6、一致性非锁定读，不阻塞其它读写，也不被其它读写阻塞。
7、一致性锁定读，会阻塞其它读写，也会被其它读写阻塞。
@endverbatim
*/
一致性非锁定读;


/**
@verbatim
1、什么是幻影读？
	在一个事务中，连续执行两次同样SQL语句得到不同的结果，第二次返回之前不存在的行。比如：
	select * from t1 where a >2; 
2、对于MySQL的可重复读隔离级别，如果是一致性非锁定读，不会导致幻影读。因为快照是在事务开启前的。
	如果是一致性锁定读，使用select * from t1 where a >2; 正常情况下，InnoDB是行锁，在a>2插入记录，导致幻影读。
	InnoDB是如何解决这个问题的？
3、InnoDB使用了范围锁，大于2的记录都上锁，解决幻影读的问题。
@endverbatim
*/
幻影读;



/** @} */

/** @} */